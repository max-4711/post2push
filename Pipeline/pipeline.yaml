# Build NodeJS Express app using Azure Pipelines
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript?view=vsts
pool:
  vmImage: 'Ubuntu 16.04'
  
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  
- task: Npm@1
  displayName: 'install npm'
  inputs:
    command: install

- script: sudo npm install -g typescript
  displayName: 'npm install typescript'

- bash: sudo yarn install --production=true
  displayName: 'Install dependencies (yarn)'
  workingDirectory: Server/Post2Push

- bash: sudo npm install -S @types/node
  displayName: 'Install node types'
  workingDirectory: Server/Post2Push

- script: tsc --project Server/Post2Push
  displayName: 'Compile TypeScript'

- task: Npm@1
  displayName: 'npm test'
  inputs:
    command: custom
    customCommand: 'test'
    workingDir: Server/Post2Push

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/TEST-RESULTS.xml'
    testRunTitle: 'Test results for JavaScript'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

# - task: DeleteFiles@1
#   displayName: 'delete non-deployment files'
#   inputs:
#     contents: './Server/Post2Push/*.ts;' #Server/Post2Push/**/*.ts;Server/Post2Push/*.js.map;Server/**/*.js.map;Server/Post2Push/README.md;-Server/Post2Push/node_modules'

#-o -name "*.js.map" -o -name ".md" 
- bash: sudo find ./ -maxdepth 2 -type f -name "*.ts" -delete
  displayName: 'delete typescript sources'
  workingDirectory: Server/Post2Push

- bash: sudo find ./ -maxdepth 2 -type f -name "*.js.map" -delete
  displayName: 'delete js map files'
  workingDirectory: Server/Post2Push

- bash: sudo find ./ -maxdepth 5 -type f -name "*.md" -delete
  displayName: 'delete markdown files'
  workingDirectory: Server/Post2Push

- bash: sed -i -e 's/PIPELINE_INSERT_CHANNELCREATIONSECRET/$(deployment.channelCreationSecret)/g' app.config.js && sed -i -e 's/PIPELINE_INSERT_PUBLICVAPIDKEY/$(deployment.vapidPublicKey)/g' app.config.js && sed -i -e 's/PIPELINE_INSERT_PRIVATEVAPIDKEY/$(deployment.vapidPrivateKey)/g' app.config.js
  displayName: 'Prepare app.config for deployment'
  workingDirectory: Server/Post2Push/config

- bash: sed -i -e 's/PIPELINE_INSERT_DATABASE_NAME/$(deployment.databaseName)/g' db.config.js && sed -i -e 's/PIPELINE_INSERT_DATABASE_USER/$(deployment.databaseUser)/g' db.config.js && sed -i -e 's/PIPELINE_INSERT_DATABASE_PASSWORD/$(deployment.databasePassword)/g' db.config.js
  displayName: 'Prepare db.config for deployment'
  workingDirectory: Server/Post2Push/config

- bash: sed -i -e 's/PIPELINE_INSERT_VAPIDCONTACTINFO/$(deployment.vapidContactInfo)/g' app.js
  displayName: 'Prepare core app for deployment'
  workingDirectory: Server/Post2Push

- bash: sed -i -e 's/PIPELINE_INSERT_PUBLICVAPIDKEY/$(deployment.vapidPublicKey)/g' client.js && sed -i -e 's#PIPELINE_INSERT_DOMAINNAME#$(deployment.domainName)#g' worker.js
  displayName: 'Prepare client-side javascript for deployment'
  workingDirectory: Server/Post2Push/public

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/Server/Post2Push'
    includeRootFolder: false

- task: PublishBuildArtifacts@1